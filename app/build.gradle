//plugins {
//    alias(libs.plugins.android.application)
//    alias(libs.plugins.jetbrains.kotlin.android)
//}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' //version '1.9.0-1.0.13'
}

android {
    namespace 'com.example.weatherapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.weatherapp"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'WEATHER_API_KEY', WEATHER_API_KEY
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
//    implementation libs.androidx.navigation.safe.args.generator
    implementation libs.okhttp.logger
    implementation libs.okhttp
    implementation libs.retrofit.converter
    implementation libs.retrofit
    implementation libs.hilt.android
    implementation(libs.hilt.lifecycle.viewmodel)
    ksp(libs.hilt.compiler)
    implementation(libs.hilt.navigation.compose)
    ksp libs.hilt.compiler
    implementation libs.compose.destinations.core
    ksp libs.compose.destinations.ksp
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest


//    // Compose Nav Destinations
//    implementation 'io.github.raamcosta.compose-destinations:core:1.1.2-beta'
//    ksp 'io.github.raamcosta.compose-destinations:ksp:1.1.2-beta'
//
//    // Coil
//    implementation "io.coil-kt:coil-compose:1.4.0"
//
//    //Dagger - Hilt
//    implementation "com.google.dagger:hilt-android:2.40.5"
//    kapt "com.google.dagger:hilt-android-compiler:2.40.5"
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
//    kapt "androidx.hilt:hilt-compiler:1.0.0"
//    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
//
//    // Retrofit
//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
//    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.3"
//    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"
}